generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions", "fullTextSearch"]
}

enum MEASURE_UNIT {
  MG
  ML
}

enum MEDICINE_TYPE {
  THANG
  HOAN
  TAN
  CAO
  DAN
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  ADMIN
  STAFF
  EDITOR
}

model user {
  id                 String   @id @default(uuid())
  email              String?
  phone              String?  @default("0")
  avatar             String?
  fullName           String?
  password           String?
  resetPasswordToken String?
  address            String?
  staffCode          String?  @unique
  dateOfBirth        String?
  cccd               String?
  startDate          String?
  bankNumber         String?
  backAccount        String?
  statusWork         String?
  note               String?
  status             Boolean  @default(true)
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  deleted            Boolean  @default(false)
}

model refresh_password {
  id         String   @id @default(uuid())
  otp        Int?
  user_token String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// thuốc
model medicine {
  id                    String                  @id @default(uuid())
  name                  String?
  measure_unit          MEASURE_UNIT? // đơn vị đo
  description           String?
  type                  MEDICINE_TYPE? // loại thuốc
  dosage                String? // liều dùng cơ bản
  price_per_unit        Float? // giá trên mỗi đơn vị 
  image                 String? // ảnh thuốc
  created_at            DateTime                @default(now())
  updated_at            DateTime                @updatedAt()
  prescription_medicine prescription_medicine[]
  medicine_transaction  medicine_transaction[]
}

model prescription_medicine {
  id             String        @id @default(uuid())
  medicine       medicine?     @relation(fields: [medicineId], references: [id])
  medicineId     String?
  amount_dosage  Float? // liều dùng cần thiết
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt()
  prescription   prescription? @relation(fields: [prescriptionId], references: [id])
  prescriptionId String?
}

model medicine_transaction {
  id                    String               @id @default(uuid())
  medicine              medicine?            @relation(fields: [medicineId], references: [id])
  medicineId            String?
  amount_price          Float? // chi tiết chi tiêu 
  created_at            DateTime             @default(now())
  updated_at            DateTime             @updatedAt()
  isComplete            Boolean              @default(false)
  receipt_transaction   receipt_transaction? @relation(fields: [receipt_transactionId], references: [id])
  receipt_transactionId String?
}

model prescription {
  id                      String                    @id @default(uuid())
  name                    String? // Tên danh mục thuốc
  disease                 String? // Loại bệnh điều trị
  prescription_medicine   prescription_medicine[] // các thuốc cần dùng 
  created_at              DateTime                  @default(now())
  updated_at              DateTime                  @updatedAt()
  prescription_transation prescription_transation[]
}

model prescription_transation {
  id                    String               @id @default(uuid())
  prescription          prescription?        @relation(fields: [prescriptionId], references: [id])
  total_amount          Float? // tổng số tiền 
  created_at            DateTime             @default(now())
  updated_at            DateTime             @updatedAt()
  prescriptionId        String?
  isComplete            Boolean              @default(false)
  receipt_transaction   receipt_transaction? @relation(fields: [receipt_transactionId], references: [id])
  receipt_transactionId String?
}

model receipt_transaction {
  id                      String                    @id @default(uuid())
  measure_fee             Float?
  medicine_transaction    medicine_transaction[]
  prescription_transation prescription_transation[]
  isComplete              Boolean                   @default(false)
  created_at              DateTime                  @default(now())
  updated_at              DateTime                  @updatedAt()
  patient                 patient?                  @relation(fields: [patientId], references: [id])
  patientId               String?
}

model patient {
  id                  String                @id @default(uuid())
  email               String?
  phone               String?               @default("0")
  avatar              String?
  fullName            String?
  address             String?
  dateOfBirth         String?
  cccd                String?
  bankNumber          String?
  backAccount         String?
  receipt_transaction receipt_transaction[]
  note                String?
  status              Boolean               @default(true)
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  deleted             Boolean               @default(false)
}
