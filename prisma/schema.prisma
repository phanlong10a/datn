generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions", "fullTextSearch"]
}

enum MEASURE_UNIT {
  MG
  ML
}

enum MEDICINE_TYPE {
  THANG
  HOAN
  TAN
  CAO
  DAN
}

enum TINH_THUOC {
  HAN
  LUONG
  NHIET
  ON
  BINH
}

enum VI_CUA_THUOC {
  NGOT
  CAY
  DANG
  CHUA
  MAN
}

enum NGUYEN_LIEU {
  THUC_VAT
  DONG_VAT
  KHAC
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ROLE {
  ADMIN
  STAFF
  EDITOR
}

enum SIDE_THUOC {
  THUOC_BAC
  THUOC_NAM
}

model user {
  id                 String   @id @default(uuid())
  email              String?
  phone              String?  @default("0")
  avatar             String?
  fullName           String?
  password           String?
  resetPasswordToken String?
  address            String?
  staffCode          String?  @unique
  dateOfBirth        String?
  cccd               String?
  startDate          String?
  bankNumber         String?
  backAccount        String?
  statusWork         String?
  note               String?
  status             Boolean  @default(true)
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  deleted            Boolean  @default(false)
}

model refresh_password {
  id         String   @id @default(uuid())
  otp        Int?
  user_token String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// thuốc
model medicine {
  id                    String                  @id @default(uuid())
  name                  String?
  measure_unit          MEASURE_UNIT? // đơn vị đo
  description           String?
  type                  MEDICINE_TYPE? // loại thuốc
  tinh_thuoc            TINH_THUOC?
  vi_cua_thuoc          VI_CUA_THUOC?
  nguyen_lieu           NGUYEN_LIEU?
  side_thuoc            SIDE_THUOC?
  dosage                String? // liều dùng cơ bản
  price_per_unit        Float? // giá trên mỗi đơn vị 
  image                 String? // ảnh thuốc
  created_at            DateTime                @default(now())
  updated_at            DateTime                @updatedAt()
  prescription_medicine prescription_medicine[]
}

model prescription_medicine {
  id                        String                   @id @default(uuid())
  medicine                  medicine?                @relation(fields: [medicineId], references: [id])
  medicineId                String?
  amount_dosage             Float? // liều dùng cần thiết
  created_at                DateTime                 @default(now())
  updated_at                DateTime                 @updatedAt()
  prescription_transation   prescription_transation? @relation(fields: [prescription_transationId], references: [id])
  prescription_transationId String?
}

model prescription_transation {
  id                    String                  @id @default(uuid())
  name                  String?
  disease               String? // Loại bệnh điều trị
  prescription_medicine prescription_medicine[] // các thuốc cần dùng 
  total_amount          Float? // tổng số tiền 
  created_at            DateTime                @default(now())
  updated_at            DateTime                @updatedAt()
  total_count           Int?
  prescriptionId        String?
  description           String?
  isComplete            Boolean?                 @default(false)
  receipt_transaction   receipt_transaction?    @relation(fields: [receipt_transactionId], references: [id])
  receipt_transactionId String?
}

model receipt_transaction {
  id                      String                    @id @default(uuid())
  code                    String?
  measure_fee             Float?
  prescription_transation prescription_transation[]
  isComplete              Boolean?                   @default(false)
  paidStatus              Boolean?                   @default(false)
  created_at              DateTime?                  @default(now())
  updated_at              DateTime?                  @updatedAt()
  patient                 patient?                  @relation(fields: [patientId], references: [id])
  patientId               String?
}

model patient {
  id                  String                @id @default(uuid())
  email               String?
  phone               String?               @default("0")
  avatar              String?
  fullName            String?
  address             String?
  dateOfBirth         String?
  cccd                String?
  bankNumber          String?
  backAccount         String?
  receipt_transaction receipt_transaction[]
  note                String?
  status              Boolean               @default(true)
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  deleted             Boolean               @default(false)
}
